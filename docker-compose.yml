version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: hebrew-ai-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-hebrew_ai}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-hebrew_ai_pass}
      POSTGRES_DB: ${DB_NAME:-hebrew_ai_agents}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-hebrew_ai}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: hebrew-ai-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: hebrew-ai-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Pinecone Alternative (Qdrant Vector DB)
  qdrant:
    image: qdrant/qdrant:latest
    container_name: hebrew-ai-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6334

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hebrew-ai-backend
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3001
      DATABASE_URL: postgresql://${DB_USER:-hebrew_ai}:${DB_PASSWORD:-hebrew_ai_pass}@postgres:5432/${DB_NAME:-hebrew_ai_agents}
      REDIS_URL: redis://redis:6379
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: ${MINIO_USER:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_PASSWORD:-minioadmin}
      QDRANT_URL: http://qdrant:6333
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
      - minio
      - qdrant
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hebrew-ai-frontend
    environment:
      REACT_APP_API_URL: http://localhost:3001
      REACT_APP_WS_URL: ws://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start

  # Agent Engine Worker
  agent-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    container_name: hebrew-ai-worker
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgresql://${DB_USER:-hebrew_ai}:${DB_PASSWORD:-hebrew_ai_pass}@postgres:5432/${DB_NAME:-hebrew_ai_agents}
      REDIS_URL: redis://redis:6379
      QDRANT_URL: http://qdrant:6333
    depends_on:
      - postgres
      - redis
      - qdrant
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run worker

volumes:
  postgres_data:
  redis_data:
  minio_data:
  qdrant_data:

networks:
  default:
    name: hebrew-ai-network